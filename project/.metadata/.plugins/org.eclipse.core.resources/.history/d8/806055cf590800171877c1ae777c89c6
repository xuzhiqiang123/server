package server;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;

import util.ThreadManager;

public class ServerSocketListener implements ServletContextListener{
	
	private ServerSocket server;
	private int port = 8888;
	
	private boolean connect = true;//是否连接硬件

	@Override
	public void contextDestroyed(ServletContextEvent arg0) {
		System.out.println("ServerSocketListener---contextDestroyed");
		if (server != null)
        {
			try {
				connect = false;
				server.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
        }
	}

	@Override
	public void contextInitialized(ServletContextEvent arg0) {
		System.out.println("ServerSocketListener---contextInitialized");
		ThreadManager.getShortPool().execute(new Runnable() {
			@Override
			public void run() {
				while(true){
					if(connect){
						try {
							if (server == null) {
								server = new ServerSocket(port);
							}
							System.out.println("server is preparing receive a socket...");
							Socket socket = server.accept();
							ClientSocket.addSocket(socket);
						} catch (IOException e) {
							e.printStackTrace();
						}
					}else{
						break;
					}
				}
			}
		});
	}

}
